{
  "name": "Cachesnooping",
  "tagline": "",
  "body": "### Summary\r\nWe are going to simulate different snooping based cache coherence protocols including MESI, MSI and analyze cache statistic differences.\r\nWe will compare the performance of MESI, MSI, write back update protocols.\r\nWe will compare bus traffic stats, including number of contenders and how many times each core has won the bus\r\n\r\n### Background\r\nThere are several different implementations of cache coherence protocols, some of the foremost protocols are the MSI, MESI, and Dragon protocols. With each of these, we will look at the performance of the same programs (or a set of programs) for each of these protocols on a simulated processor. This way, we can look at specifically how bus traffic and interconnect contention affect program performance.\r\n\r\nOur simulator will only look at the bus arbitration for an L1 cache.\r\n\r\n### The Challenge\r\n We will need to simulate a variable core processor, where each core contains an L1 cache. For each core, we need to keep track of the cache hits, cache misses, the number of times this core has contended for the bus, the number of times this core has won the bus.\r\n\r\n### Resources\r\nWe want to modify existing code to simulate our processor, but we will be implementing the MSI and MESI FSMs, as well as the simulator ourselves. We will use the Contech to generate memory traces of parallel programs so analyze and simulate the cache interactions on our processor.\r\n\r\n### Goals and Deliverables\r\n By the end of the project, we should have analysis on how MESI and MSI protocols affect bus traffic, as well as how the bus traffic changes as the number of cores increases. We will also measure memory latency for each core, and total latency for the program given each protocol and the number of cores on the processor.\r\n\r\n###Platform Choice\r\nSeeing as we are simulating the processor, the machine we run on doesnâ€™t need any special hardware. We will use C++ to write our simulator and cache coherence implementation\r\n\r\n###Schedule\r\nApril 4 - 10 : simulate a single cache and processor - that reads in Contech traces\r\nApril 11 - 17 : implement MESI/MSI protocol\r\nApril 18 - 24 : add transactional memory\r\nApril 25 - May 1: Look at meaningful statistics and analyze\r\nMay 2 - May 9: Create presentation\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}